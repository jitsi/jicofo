#!/bin/bash
# postinst script for jicofo

set -e

case "$1" in
    configure)

        CONFIG="/etc/jitsi/jicofo/config"

        # we don't want to regenerate config on upgrade
        OLDCONFIG="false"
        if [ -f $CONFIG ]; then
            . $CONFIG
            if [ -n "$JICOFO_HOSTNAME" ] \
                && [ -n "$JICOFO_AUTH_DOMAIN" ] && [ -n "$JICOFO_AUTH_USER" ] && [ -n "$JICOFO_AUTH_PASSWORD" ]; then
                OLDCONFIG="true"
            fi
        fi

        # debconf hostname question
        . /usr/share/debconf/confmodule

        # try to get host from jitsi-videobridge
        db_get jitsi-videobridge/jvb-hostname
        if [ -z "$RET" ] ; then
            # server hostname
            db_set jitsi-videobridge/jvb-hostname "localhost"
            db_input critical jitsi-videobridge/jvb-hostname || true
            db_go
        fi
        JVB_HOSTNAME=$(echo "$RET" | xargs echo -n)

        # generate config on new install
        if [ "$OLDCONFIG" = "false" ] || [ "$JVB_HOSTNAME" != "$JICOFO_HOSTNAME" ]; then

            JICOFO_HOSTNAME="$JVB_HOSTNAME"

            JICOFO_AUTH_DOMAIN="auth.$JICOFO_HOSTNAME"
            JICOFO_AUTH_USER="focus"
            db_get jicofo/jicofo-authpassword
            if [ -z "$RET" ] ; then
                RET=`head -c 8 /dev/urandom | tr '\0-\377' 'a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9@@@@####'`
            fi
            JICOFO_AUTH_PASSWORD="$RET"

            # storing default. TODO: move this to jicofo.conf
            echo '# Jitsi Conference Focus settings' > $CONFIG
            echo '# sets the host name of the XMPP server' >> $CONFIG
            echo "JICOFO_HOST=localhost" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the XMPP domain (default: none)' >> $CONFIG
            echo "JICOFO_HOSTNAME=$JICOFO_HOSTNAME" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the XMPP domain name to use for XMPP user logins' >> $CONFIG
            echo "JICOFO_AUTH_DOMAIN=$JICOFO_AUTH_DOMAIN" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the username to use for XMPP user logins' >> $CONFIG
            echo "JICOFO_AUTH_USER=$JICOFO_AUTH_USER" >> $CONFIG
            echo >> $CONFIG
            echo '# sets the password to use for XMPP user logins' >> $CONFIG
            echo "JICOFO_AUTH_PASSWORD=$JICOFO_AUTH_PASSWORD" >> $CONFIG
            echo >> $CONFIG
            echo '# extra options to pass to the jicofo daemon' >> $CONFIG
            echo "JICOFO_OPTS=\"\"" >> $CONFIG
            echo >> $CONFIG
            echo '# adds java system props that are passed to jicofo (default are for home and logging config file)' >> $CONFIG
            echo "JAVA_SYS_PROPS=\"-Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION=/etc/jitsi\
 -Dnet.java.sip.communicator.SC_HOME_DIR_NAME=jicofo\
 -Dnet.java.sip.communicator.SC_LOG_DIR_LOCATION=/var/log/jitsi\
 -Djava.util.logging.config.file=/etc/jitsi/jicofo/logging.properties\"" >> $CONFIG

        fi

        # Store values, so we can use it if we are configuring other packages on the same machine
        # we are currently doing this on every upgrade in order to be able to succesfully upgrade
        # from old packages, otherwise we can do it only on new configuraiton or reconfiguration
        db_set jicofo/jicofo-authuser "$JICOFO_AUTH_USER"
        db_set jicofo/jicofo-authpassword "$JICOFO_AUTH_PASSWORD"

        # and we're done with debconf
        db_stop

        OLD_JITSI_CONFIG="/usr/share/jicofo/.sip-communicator/sip-communicator.properties"
        NEW_JITSI_CONFIG="/etc/jitsi/jicofo/sip-communicator.properties"
        HOCON_CONFIG="/etc/jitsi/jicofo/jicofo.conf"
        if [ -f $OLD_JITSI_CONFIG ]; then
            mv $OLD_JITSI_CONFIG $NEW_JITSI_CONFIG
            echo "# Config has moved to /etc/jitsi/jicofo/
# do not edit this file as it is not used" > ${OLD_JITSI_CONFIG}.old
        elif [ ! -f $NEW_JITSI_CONFIG ]; then
            # if sip-communicator.properties file is missing create it
            # as jicofo will search for it and if cannot create it will fail starting
            touch $NEW_JITSI_CONFIG
        fi

        # Default is to use mucs for jvb, if setting is missing add it
        # we are migrating old configs to use mucs now
        if ! grep -q "org.jitsi.jicofo.BRIDGE_MUC" "$NEW_JITSI_CONFIG" ;then
            echo "org.jitsi.jicofo.BRIDGE_MUC=JvbBrewery@internal.auth.${JVB_HOSTNAME}" >> $NEW_JITSI_CONFIG
        fi

        # Updates config so new and old installs will start using the new config file
        if ! grep -q "\-Dconfig.file" "$CONFIG"; then
            echo "Updating $CONFIG to use jicofo.conf"
            sed -i 's|JAVA_SYS_PROPS="|JAVA_SYS_PROPS="-Dconfig.file='"$HOCON_CONFIG"' |g' $CONFIG
        fi

        if [ ! -f $HOCON_CONFIG ]; then
            echo "Generating an empty jicofo.conf file"
            echo "# Jicofo HOCON configuration. See /usr/share/jicofo/jicofo.jar/reference.conf for
#available options, syntax, and default values.
jicofo {
}" >> $HOCON_CONFIG
        fi

        # Make sure the client-proxy is set correctly.
        hocon -f $HOCON_CONFIG set jicofo.xmpp.client.client-proxy "focus.$JVB_HOSTNAME"

        # Mark the jibri domain as trusted unless the trusted-domains have been set.
        if ! hocon -f $HOCON_CONFIG get "jicofo.xmpp.trusted-domains" > /dev/null 2>&1 ;then
            hocon -f $HOCON_CONFIG set "jicofo.xmpp.trusted-domains" "recorder.$JVB_HOSTNAME"

        fi

        # we don't want to start the daemon as root
        if ! getent group jitsi > /dev/null ; then
            groupadd jitsi
        fi
        if ! getent passwd jicofo > /dev/null ; then
            useradd -r -g jitsi --shell /bin/bash --create-home -d /usr/share/jicofo jicofo
        fi
        if ! groups jicofo | grep '\bjitsi\b' > /dev/null ; then
            usermod -g jitsi jicofo
        fi

        mkdir -p /usr/share/jicofo

        # we claim the home folder of jicofo in case it is owned by someone else
        OWNER=$(stat -c '%U' /usr/share/jicofo)
        GROUP=$(stat -c '%G' /usr/share/jicofo)
        if ! dpkg-statoverride --list /usr/share/jicofo/* >/dev/null && [ "$OWNER:$GROUP" != "jicofo:jitsi" ]; then
            chown -R jicofo:jitsi /usr/share/jicofo
            OWNER=jicofo
            GROUP=jitsi
        fi

        CONFIG_DIR=$(dirname $CONFIG)
        if ! dpkg-statoverride --list "$CONFIG_DIR" >/dev/null; then
            chown -R jicofo:jitsi "$CONFIG_DIR"
            chmod 750 "$CONFIG_DIR"
        fi

        # die logz
        if [ ! -d /var/log/jitsi ]; then
            mkdir -p /var/log/jitsi
            chown $OWNER:$GROUP /var/log/jitsi
            chmod 770 /var/log/jitsi
        fi
        ls /var/log/jitsi/jicofo* 1>/dev/null 2>&1 && chown -f -R $OWNER:$GROUP /var/log/jitsi/jicofo*
        ls /var/log/jitsi/jicofo* 1>/dev/null 2>&1 && chmod -f -R 640 /var/log/jitsi/jicofo*

        # ensure focus is not running - it will be started at the end
        if invoke-rc.d jicofo status >/dev/null 2>&1 ; then
            invoke-rc.d jicofo stop || true
        fi

        # clean up old jicofo group
        if getent group jicofo > /dev/null; then
            groupdel jicofo
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
